{"version":3,"sources":["components/RegionSelector/RegionSelector.module.css","pages/Home/Home.module.css","shared/apollo-client.ts","shared/bugsnag.ts","components/RegionSelector/conversion.ts","components/RegionSelector/RegionSelector.tsx","shared/l10n.tsx","components/Form/schema.ts","components/Form/Form.tsx","pages/Home/Home.tsx","pages/Home/index.tsx","pages/index.ts","index.tsx"],"names":["module","exports","errorLink","onError","graphQLErrors","networkError","forEach","data","Bugsnag","notify","message","event","addMetadata","httpLink","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","link","from","apiKey","process","start","plugins","BugsnagPluginReact","ErrorBoundary","getPlugin","createErrorBoundary","React","fns","polygonToString","polygon","region","getPath","getArray","map","row","lat","toFixed","lng","join","push","polygonStringToCoords","str","path","split","undefined","Error","parseFloat","pop","center","options","rotateControl","scaleControl","streetViewControl","panControl","fullscreenControl","RegionSelector","props","useState","polygonRef","setPolygonRef","convert","value","polygonPath","useLoadScript","googleMapsApiKey","isLoaded","loadError","onPolygonChange","onChange","Message","negative","Header","mapContainerClassName","styles","zoom","draggable","editable","onLoad","onDragEnd","onMouseUp","onRightClick","vertex","removeAt","Segment","loading","className","setLocale","mixed","required","notType","string","email","max","number","integer","positive","min","moreThan","lessThan","positiveFormNumber","transform","originalValue","String","trim","moreThanEqualMin","schema","object","shape","category","oneOf","type","price_min","price_max","when","rooms_min","rooms_max","area_m2_min","area_m2_max","matches","comments","categoryOptions","text","typeOptions","getError","field","content","pointing","PingerForm","useForm","resolver","yupResolver","control","handleSubmit","errors","Form","error","warning","success","onSubmit","name","defaultValue","render","Field","id","Input","label","placeholder","Group","widths","Select","e","htmlFor","labelPosition","Label","basic","prompt","TextArea","Button","primary","role","formNoValidate","defaultProps","CREATE_PINGER","getMaxPingerLimitFromError","extensions","maxPingers","Home","useMutation","errorPolicy","createPinger","useCallback","form","variables","Container","container","padded","header","Content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6599b5d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"RegionSelector_map__RYekW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1s89M\"};","import { ApolloClient, InMemoryCache, from, HttpLink } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport Bugsnag from \"@bugsnag/js\";\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach((data) => {\n      Bugsnag.notify(`[GraphQL error]: Message: ${data.message}`, (event) => {\n        event.addMetadata(\"data\", data);\n      });\n    });\n  }\n\n  if (networkError) {\n    Bugsnag.notify(`[Network error]: ${networkError}`);\n  }\n});\n\nconst httpLink = new HttpLink({\n  uri: \"https://api.brokalys.com\",\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: from([errorLink, httpLink]),\n});\n\nexport default client;\n","import Bugsnag from \"@bugsnag/js\";\nimport BugsnagPluginReact from \"@bugsnag/plugin-react\";\nimport React from \"react\";\n\nconst apiKey = process.env.REACT_APP_BUGSNAG_KEY;\nlet ErrorBoundary: any = ({ children }: { children: React.ReactNode }) =>\n  children;\n\nif (apiKey) {\n  Bugsnag.start({\n    apiKey,\n    plugins: [new BugsnagPluginReact()],\n  });\n\n  ErrorBoundary = Bugsnag.getPlugin(\"react\")!.createErrorBoundary(React);\n}\n\nexport default ErrorBoundary;\n","/// <reference types=\"googlemaps\" />\n\nfunction polygonToString(polygon: google.maps.Polygon) {\n  const region = polygon\n    .getPath()\n    .getArray()\n    .map((row) => [row.lat().toFixed(6), row.lng().toFixed(6)].join(\" \"));\n  region.push(region[0]);\n  return region.join(\", \");\n}\n\nfunction polygonStringToCoords(str: string) {\n  const path = str.split(\", \").map((row) => {\n    const [lat, lng] = row.split(\" \");\n\n    if (lat === undefined || lng === undefined) {\n      throw new Error(\"Invalid coordinates provided\");\n    }\n\n    return {\n      lat: parseFloat(lat),\n      lng: parseFloat(lng),\n    };\n  });\n  path.pop();\n  return path;\n}\n\nconst fns = { polygonToString, polygonStringToCoords };\n\nexport default fns;\n","/// <reference types=\"googlemaps\" />\nimport { GoogleMap, Polygon, useLoadScript } from \"@react-google-maps/api\";\nimport React, { useState } from \"react\";\nimport { Message, Segment } from \"semantic-ui-react\";\nimport convert from \"./conversion\";\nimport styles from \"./RegionSelector.module.css\";\n\nconst center = {\n  lat: 56.94,\n  lng: 24.105,\n};\n\nconst options = {\n  rotateControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  panControl: false,\n  fullscreenControl: false,\n};\n\ninterface RegionSelectorProps {\n  value: string;\n  onChange: (event: string) => void;\n}\n\nexport default function RegionSelector(props: RegionSelectorProps) {\n  const [polygonRef, setPolygonRef] = useState<google.maps.Polygon>();\n  const [polygonPath] = useState(() =>\n    convert.polygonStringToCoords(props.value),\n  );\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY!,\n  });\n\n  function onPolygonChange() {\n    props.onChange(convert.polygonToString(polygonRef!));\n  }\n\n  function onPolygonRemove(event: google.maps.PolyMouseEvent) {\n    if (event.vertex === undefined) {\n      return;\n    }\n\n    polygonRef!.getPath().removeAt(event.vertex);\n    onPolygonChange();\n  }\n\n  if (!isLoaded) {\n    return <Segment loading className={styles.map} />;\n  }\n\n  if (loadError) {\n    return (\n      <Message negative>\n        <Message.Header>Problēma ielādējot karti</Message.Header>\n        <p>\n          Diemžēl, radusies problēma ielādējot karti. Lūdzu, mēģini vēlreiz\n          vēlāk.\n        </p>\n      </Message>\n    );\n  }\n\n  return (\n    <GoogleMap\n      options={options}\n      mapContainerClassName={styles.map}\n      center={center}\n      zoom={11}\n    >\n      <Polygon\n        draggable\n        editable\n        path={polygonPath}\n        onLoad={setPolygonRef}\n        onDragEnd={onPolygonChange}\n        onMouseUp={onPolygonChange}\n        onRightClick={onPolygonRemove}\n      />\n    </GoogleMap>\n  );\n}\n","/* eslint-disable no-template-curly-in-string */\nimport { setLocale } from \"yup\";\n\nsetLocale({\n  mixed: {\n    required: \"Šis lauciņš ir obligāti jāaizpilda\",\n    notType: \"Šajā lauciņā nav ievadīta pareiza vērtība\",\n  },\n  string: {\n    email: \"Šajā lauciņā jābūt ievadītai e-pasta adresei\",\n    max: \"Šajā lauciņā drīkst ievadīt tikai ${max} simbolus\",\n  },\n  number: {\n    integer: \"Šajā lauciņā var ievadīt tikai veselus skaitļus\",\n    positive: \"Šajā lauciņā var ievadīt tikai pozitīvus skaitļus\",\n    min: \"Šī lauciņa vērtībai ir jābūt lielākai vai vienādai ar ${min}\",\n    moreThan: \"Šī lauciņa vērtībai ir jābūt lielākai par ${more}\",\n    lessThan: \"Šī lauciņa vērtībai ir jābūt mazākai par ${less}\",\n  },\n});\n","import { mixed, number, object, string, NumberSchema, SchemaOf } from \"yup\";\n\nexport interface FormSchema {\n  email: string;\n  category: \"APARTMENT\" | \"HOUSE\" | \"LAND\";\n  type: \"SELL\" | \"RENT\";\n  price_min: number;\n  price_max: number;\n  rooms_min?: number;\n  rooms_max?: number;\n  area_m2_min?: number;\n  area_m2_max?: number;\n  region: string;\n  comments?: string;\n}\n\nconst positiveFormNumber = (): NumberSchema =>\n  number()\n    .positive()\n    .integer()\n    .transform((value?: string | number, originalValue?: string | number) =>\n      String(originalValue).trim() === \"\" ? undefined : value,\n    );\n\nconst moreThanEqualMin = (min: number | undefined, schema: NumberSchema) => {\n  if (!min) {\n    return schema;\n  }\n  return schema.min(min);\n};\n\nconst schema: SchemaOf<FormSchema> = object().shape({\n  email: string().email().required(),\n  category: mixed().oneOf([\"APARTMENT\", \"HOUSE\", \"LAND\"]).required(),\n  type: mixed().oneOf([\"SELL\", \"RENT\"]).required(),\n  price_min: positiveFormNumber().required(),\n  price_max: positiveFormNumber()\n    .required()\n    .when(\"price_min\", moreThanEqualMin)\n    .lessThan(10000000),\n  rooms_min: positiveFormNumber(),\n  rooms_max: positiveFormNumber()\n    .when(\"rooms_min\", moreThanEqualMin)\n    .lessThan(20),\n  area_m2_min: positiveFormNumber(),\n  area_m2_max: positiveFormNumber()\n    .when(\"area_m2_min\", moreThanEqualMin)\n    .when(\"category\", (category: string, schema: NumberSchema) =>\n      schema.lessThan(category === \"LAND\" ? 1000000 : 1000),\n    ),\n  region: string()\n    .required()\n    .matches(/^(-?[0-9]{1,3}\\.[0-9]+ -?[0-9]{1,3}\\.[0-9]+(, )?)+$/, {\n      message: \"Lūdzu izvēlies reģionu\",\n    }),\n  comments: string().max(255),\n});\n\nexport default schema;\n","import React from \"react\";\nimport { Controller, FieldError, useForm } from \"react-hook-form\";\nimport {\n  DropdownItemProps,\n  DropdownProps,\n  Form,\n  Label,\n  LabelProps,\n  SemanticShorthandItem,\n} from \"semantic-ui-react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport RegionSelector from \"components/RegionSelector\";\nimport \"shared/l10n\";\nimport schema, { FormSchema } from \"./schema\";\n\nconst categoryOptions: DropdownItemProps[] = [\n  { value: \"APARTMENT\", text: \"Dzīvoklis\" },\n  { value: \"HOUSE\", text: \"Māja\" },\n  { value: \"LAND\", text: \"Zeme\" },\n];\n\nconst typeOptions: DropdownItemProps[] = [\n  { value: \"SELL\", text: \"Pārdod\" },\n  { value: \"RENT\", text: \"Īrē\" },\n];\n\nfunction getError(\n  field?: FieldError,\n): boolean | SemanticShorthandItem<LabelProps> {\n  if (field) {\n    return { content: field?.message, pointing: \"below\" };\n  }\n  return false;\n}\n\ninterface PingerFormProps {\n  onSubmit: (data: FormSchema) => void;\n  loading?: boolean;\n  error?: React.ReactNode;\n  warning?: React.ReactNode;\n  success?: React.ReactNode;\n}\n\nexport default function PingerForm(props: PingerFormProps) {\n  const { control, handleSubmit, errors } = useForm<FormSchema>({\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <Form\n      loading={props.loading}\n      error={!!props.error}\n      warning={!!props.warning}\n      success={!!props.success}\n      onSubmit={handleSubmit(props.onSubmit)}\n    >\n      <Controller\n        name=\"email\"\n        control={control}\n        defaultValue=\"\"\n        render={(props) => (\n          <Form.Field\n            required\n            id=\"form-email-field\"\n            control={Form.Input}\n            label=\"E-pasta adrese\"\n            placeholder=\"john@doe.com\"\n            error={getError(errors.email)}\n            value={props.value}\n            onChange={props.onChange}\n          />\n        )}\n      />\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"category\"\n          control={control}\n          defaultValue=\"APARTMENT\"\n          render={(props) => (\n            <Form.Field\n              required\n              id=\"form-category-field\"\n              control={Form.Select}\n              label=\"Nekustamā īpašuma tips\"\n              options={categoryOptions}\n              error={getError(errors.category)}\n              value={props.value}\n              onChange={(\n                e: React.SyntheticEvent<HTMLElement>,\n                { value }: DropdownProps,\n              ) => props.onChange(value)}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"type\"\n          control={control}\n          defaultValue=\"SELL\"\n          render={(props) => (\n            <Form.Field\n              required\n              id=\"form-type-field\"\n              control={Form.Select}\n              label=\"Darījuma veids\"\n              options={typeOptions}\n              error={getError(errors.type)}\n              value={props.value}\n              onChange={(\n                e: React.SyntheticEvent<HTMLElement>,\n                { value }: DropdownProps,\n              ) => props.onChange(value)}\n            />\n          )}\n        />\n      </Form.Group>\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"price_min\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field required error={!!errors.price_min}>\n              <label htmlFor=\"form-price-min-field\">Cena (min)</label>\n              <Form.Input\n                id=\"form-price-min-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"0\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.price_min}>\n                  EUR\n                </Label>\n              </Form.Input>\n              {errors.price_min && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-price-min-field-error-message\"\n                >\n                  {errors.price_min.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n        <Controller\n          name=\"price_max\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field required error={!!errors.price_max}>\n              <label htmlFor=\"form-price-max-field\">Cena (max)</label>\n              <Form.Input\n                id=\"form-price-max-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"1000\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.price_max}>\n                  EUR\n                </Label>\n              </Form.Input>\n              {errors.price_max && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-price-max-field-error-message\"\n                >\n                  {errors.price_max.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n      </Form.Group>\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"rooms_min\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field\n              control={Form.Input}\n              type=\"number\"\n              id=\"form-rooms-min-field\"\n              label=\"Istabas (min)\"\n              placeholder=\"1\"\n              error={getError(errors.rooms_min)}\n              value={props.value}\n              onChange={props.onChange}\n            />\n          )}\n        />\n        <Controller\n          name=\"rooms_max\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field\n              control={Form.Input}\n              type=\"number\"\n              id=\"form-rooms-max-field\"\n              label=\"Istabas (max)\"\n              placeholder=\"3\"\n              error={getError(errors.rooms_max)}\n              value={props.value}\n              onChange={props.onChange}\n            />\n          )}\n        />\n      </Form.Group>\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"area_m2_min\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field required error={!!errors.area_m2_min}>\n              <label htmlFor=\"form-area-m2-min-field\">Platība (min)</label>\n              <Form.Input\n                id=\"form-area-m2-min-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"30\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.area_m2_min}>\n                  m<sup>2</sup>\n                </Label>\n              </Form.Input>\n              {errors.area_m2_min && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-area-m2-min-field-error-message\"\n                >\n                  {errors.area_m2_min.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n        <Controller\n          name=\"area_m2_max\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field required error={!!errors.area_m2_max}>\n              <label htmlFor=\"form-area-m2-max-field\">Platība (max)</label>\n              <Form.Input\n                id=\"form-area-m2-max-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"70\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.area_m2_max}>\n                  m<sup>2</sup>\n                </Label>\n              </Form.Input>\n              {errors.area_m2_max && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-area-m2-max-field-error-message\"\n                >\n                  {errors.area_m2_max.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n      </Form.Group>\n\n      <Controller\n        name=\"region\"\n        control={control}\n        defaultValue=\"56.992294 24.136619, 56.976394 23.995790, 56.924904 24.005336, 56.889288 24.108467, 56.932211 24.291935, 56.996502 24.245176, 56.992294 24.136619\"\n        render={(props) => (\n          <Form.Field\n            required\n            control={RegionSelector}\n            id=\"form-region-field\"\n            label=\"Reģions\"\n            error={getError(errors.region)}\n            value={props.value}\n            onChange={props.onChange}\n          />\n        )}\n      />\n\n      <Controller\n        name=\"comments\"\n        control={control}\n        defaultValue=\"\"\n        render={(props) => (\n          <Form.Field\n            control={Form.TextArea}\n            id=\"form-comments-field\"\n            label=\"Komentāri\"\n            placeholder=\"Ieteikumi, atsauksmes\"\n            error={getError(errors.comments)}\n            value={props.value}\n            onChange={props.onChange}\n          />\n        )}\n      />\n\n      {props.error}\n      {props.warning}\n      {props.success}\n\n      <Form.Field\n        control={Form.Button}\n        primary\n        type=\"submit\"\n        role=\"button\"\n        content=\"Saņemt nek.īp. paziņojumus\"\n        formNoValidate\n      />\n    </Form>\n  );\n}\n\nPingerForm.defaultProps = {\n  loading: false,\n  error: false,\n  success: false,\n};\n","import { ApolloError, useMutation } from \"@apollo/client\";\nimport { loader } from \"graphql.macro\";\nimport { useCallback } from \"react\";\nimport { Container, Message, Segment } from \"semantic-ui-react\";\nimport Form, { FormSchema } from \"components/Form\";\nimport styles from \"./Home.module.css\";\n\nconst CREATE_PINGER = loader(\"../../graphql/create-pinger.graphql\");\n\nfunction getMaxPingerLimitFromError(error?: ApolloError): number {\n  return error?.graphQLErrors[0]?.extensions?.maxPingers || 0;\n}\n\nexport default function Home() {\n  const [createPinger, { loading, error, data }] = useMutation(CREATE_PINGER, {\n    errorPolicy: \"all\",\n  });\n\n  const onSubmit = useCallback(\n    (form: FormSchema) => {\n      createPinger({ variables: form });\n    },\n    [createPinger],\n  );\n\n  return (\n    <Container text className={styles.container}>\n      <Segment padded>\n        <h1>Brokalys pingeris</h1>\n        <p>\n          Aizpildi formu un saņem paziņojumus e-pastā par jauniem nekustamā\n          īpašuma sludinājumiem.\n        </p>\n        <hr />\n        <Form\n          onSubmit={onSubmit}\n          loading={loading}\n          error={\n            error &&\n            getMaxPingerLimitFromError(error) <= 0 && (\n              <Message\n                error\n                header=\"Kaut kas nogāja greizi\"\n                content=\"Centīsimies atrisināt problēmu tuvākajā laikā.\"\n              />\n            )\n          }\n          warning={\n            error &&\n            getMaxPingerLimitFromError(error) > 0 && (\n              <Message warning>\n                <Message.Header>PINGERis nav izveidots</Message.Header>\n                <Message.Content>\n                  Diemžēl, vienai e-pasta adresei var pievienot tikai{\" \"}\n                  {getMaxPingerLimitFromError(error)} NĪ paziņojumus\n                </Message.Content>\n              </Message>\n            )\n          }\n          success={\n            data && (\n              <Message\n                success\n                header=\"PINGERis veiksmīgi izveidots\"\n                content=\"Turpmāk saņemsi e-pastus par jauniem nekustamo īpašumu sludinājumiem, kas atbilst tevis izvēlētajiem kritērijiem.\"\n              />\n            )\n          }\n        />\n      </Segment>\n    </Container>\n  );\n}\n","import Home from \"./Home\";\n\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import { ApolloProvider } from \"@apollo/client\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport client from \"shared/apollo-client\";\nimport ErrorBoundary from \"shared/bugsnag\";\nimport \"./index.css\";\nimport App from \"./pages\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}