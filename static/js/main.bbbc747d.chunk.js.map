{"version":3,"sources":["components/PageContainer/PageContainer.module.css","components/RegionSelector/RegionSelector.module.css","components/Form/Fields/RegionField/RegionField.module.css","shared/apollo-client.ts","shared/bugsnag.ts","components/PageContainer/index.tsx","components/PageContainer/PageContainer.tsx","shared/l10n.tsx","components/RegionSelector/conversion.ts","components/RegionSelector/RegionSelector.tsx","components/Form/Fields/RegionField/RegionField.tsx","components/Form/Fields/RegionField/index.ts","components/Form/Fields/RegionField/use-region-options.ts","components/Form/PriceTypeLabel.tsx","components/Form/schema.ts","components/Form/Form.tsx","pages/Home/Home.tsx","pages/Home/index.tsx","pages/PrivacyPolicy/index.ts","pages/PrivacyPolicy/PrivacyPolicy.tsx","pages/TermsAndConditions/index.ts","pages/TermsAndConditions/TermsAndConditions.tsx","pages/index.tsx","index.tsx"],"names":["module","exports","errorLink","onError","graphQLErrors","networkError","forEach","data","Bugsnag","notify","message","event","addMetadata","httpLink","HttpLink","uri","process","client","ApolloClient","cache","InMemoryCache","link","from","apiKey","start","plugins","BugsnagPluginReact","ErrorBoundary","getPlugin","createErrorBoundary","React","PageContainer","props","Container","text","className","styles","container","children","textAlign","footer","List","divided","horizontal","inverted","Item","as","Link","to","setLocale","mixed","required","notType","string","email","max","number","integer","positive","min","moreThan","lessThan","fns","polygonToString","polygon","region","getPath","getArray","map","row","lat","toFixed","lng","join","push","polygonStringToCoords","str","path","split","undefined","Error","parseFloat","pop","options","rotateControl","scaleControl","streetViewControl","panControl","fullscreenControl","RegionSelector","useState","polygonRef","setPolygonRef","polygonPath","useMemo","convert","value","useLoadScript","googleMapsApiKey","isLoaded","loadError","onPolygonChange","onChange","Message","negative","Header","mapContainerClassName","center","zoom","draggable","editable","onLoad","onDragEnd","onMouseUp","onRightClick","vertex","removeAt","Segment","loading","DEFAULT_CENTER","RegionField","regionOptions","setOptions","useEffect","a","riga","features","geometry","coordinates","coords","properties","name","loadRegionData","useRegionOptions","initialValue","setCenter","setZoom","Form","Field","inline","label","dropdown","Select","deburr","search","clearable","selectOnBlur","selectOnNavigation","length","placeholder","e","arr","reduce","x","y","getCenterCoords","find","opt","getCoordinatesByValue","PriceTypeLabel","type","positiveFormNumber","transform","originalValue","String","trim","moreThanEqualMin","schema","object","shape","category","oneOf","price_min","price_max","when","price_type","rooms_min","rooms_max","area_m2_min","area_m2_max","matches","frequency","privacy_policy","boolean","marketing","categoryOptions","typeOptions","priceTypeOptions","frequencyOptions","description","DEFAULT_PRICE_TYPE","getError","field","pointing","content","PingerForm","useForm","resolver","yupResolver","control","handleSubmit","errors","priceType","setPriceType","error","warning","success","onSubmit","defaultValue","render","id","Input","Group","widths","htmlFor","labelPosition","Label","basic","prompt","Checkbox","target","Icon","checked","Button","primary","role","formNoValidate","defaultProps","CREATE_PINGER","getMaxPingerLimitFromError","extensions","maxPingers","Home","useMutation","errorPolicy","createPinger","useCallback","form","variables","header","Content","PrivacyPolicy","TermsAndConditions","Routes","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbbc747d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageContainer_container__lo0vg\",\"footer\":\"PageContainer_footer__2oWjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"RegionSelector_map__RYekW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"RegionField_label__bbhIu\",\"dropdown\":\"RegionField_dropdown__10xQQ\"};","import { ApolloClient, InMemoryCache, from, HttpLink } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport Bugsnag from \"@bugsnag/js\";\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach((data) => {\n      Bugsnag.notify(`[GraphQL error]: Message: ${data.message}`, (event) => {\n        event.addMetadata(\"data\", data);\n      });\n    });\n  }\n\n  if (networkError) {\n    Bugsnag.notify(`[Network error]: ${networkError}`);\n  }\n});\n\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_API_URL,\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: from([errorLink, httpLink]),\n});\n\nexport default client;\n","import Bugsnag from \"@bugsnag/js\";\nimport BugsnagPluginReact from \"@bugsnag/plugin-react\";\nimport React from \"react\";\n\nconst apiKey = process.env.REACT_APP_BUGSNAG_KEY;\nlet ErrorBoundary: any = ({ children }: { children: React.ReactNode }) =>\n  children;\n\nif (apiKey) {\n  Bugsnag.start({\n    apiKey,\n    plugins: [new BugsnagPluginReact()],\n  });\n\n  ErrorBoundary = Bugsnag.getPlugin(\"react\")!.createErrorBoundary(React);\n}\n\nexport default ErrorBoundary;\n","import PageContainer from \"./PageContainer\";\n\nexport default PageContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, List } from \"semantic-ui-react\";\nimport styles from \"./PageContainer.module.css\";\n\ninterface PageContainerProps {\n  children: React.ReactNode;\n}\n\nexport default function PageContainer(props: PageContainerProps) {\n  return (\n    <>\n      <Container text className={styles.container}>\n        {props.children}\n      </Container>\n\n      <Container textAlign=\"center\" className={styles.footer}>\n        <List divided horizontal inverted>\n          <List.Item as={Link} to=\"/terms-and-conditions\">\n            Lietošanas noteikumi\n          </List.Item>\n          <List.Item as={Link} to=\"/privacy-policy\">\n            Privātuma politika\n          </List.Item>\n        </List>\n      </Container>\n    </>\n  );\n}\n","/* eslint-disable no-template-curly-in-string */\nimport { setLocale } from \"yup\";\n\nsetLocale({\n  mixed: {\n    required: \"Šis lauciņš ir obligāti jāaizpilda\",\n    notType: \"Šajā lauciņā nav ievadīta pareiza vērtība\",\n  },\n  string: {\n    email: \"Šajā lauciņā jābūt ievadītai e-pasta adresei\",\n    max: \"Šajā lauciņā drīkst ievadīt tikai ${max} simbolus\",\n  },\n  number: {\n    integer: \"Šajā lauciņā var ievadīt tikai veselus skaitļus\",\n    positive: \"Šajā lauciņā var ievadīt tikai pozitīvus skaitļus\",\n    min: \"Šī lauciņa vērtībai ir jābūt lielākai vai vienādai ar ${min}\",\n    moreThan: \"Šī lauciņa vērtībai ir jābūt lielākai par ${more}\",\n    lessThan: \"Šī lauciņa vērtībai ir jābūt mazākai par ${less}\",\n  },\n});\n","/// <reference types=\"googlemaps\" />\n\nfunction polygonToString(polygon: google.maps.Polygon) {\n  const region = polygon\n    .getPath()\n    .getArray()\n    .map((row) => [row.lat().toFixed(6), row.lng().toFixed(6)].join(\" \"));\n  region.push(region[0]);\n  return region.join(\", \");\n}\n\nfunction polygonStringToCoords(str: string) {\n  const path = str.split(\", \").map((row) => {\n    const [lat, lng] = row.split(\" \");\n\n    if (lat === undefined || lng === undefined) {\n      throw new Error(\"Invalid coordinates provided\");\n    }\n\n    return {\n      lat: parseFloat(lat),\n      lng: parseFloat(lng),\n    };\n  });\n  path.pop();\n  return path;\n}\n\nconst fns = { polygonToString, polygonStringToCoords };\n\nexport default fns;\n","/// <reference types=\"googlemaps\" />\nimport { GoogleMap, Polygon, useLoadScript } from \"@react-google-maps/api\";\nimport React, { useMemo, useState } from \"react\";\nimport { Message, Segment } from \"semantic-ui-react\";\nimport convert from \"./conversion\";\nimport styles from \"./RegionSelector.module.css\";\n\nconst options = {\n  rotateControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  panControl: false,\n  fullscreenControl: false,\n};\n\ninterface RegionSelectorProps {\n  value: string;\n  center: {\n    lat: number;\n    lng: number;\n  };\n  zoom: number;\n  onChange: (event: string) => void;\n}\n\nexport default function RegionSelector(props: RegionSelectorProps) {\n  const [polygonRef, setPolygonRef] = useState<google.maps.Polygon>();\n  const polygonPath = useMemo(\n    () => convert.polygonStringToCoords(props.value),\n    [props.value],\n  );\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY!,\n  });\n\n  function onPolygonChange() {\n    props.onChange(convert.polygonToString(polygonRef!));\n  }\n\n  function onPolygonRemove(event: google.maps.PolyMouseEvent) {\n    if (event.vertex === undefined) {\n      return;\n    }\n\n    polygonRef!.getPath().removeAt(event.vertex);\n    onPolygonChange();\n  }\n\n  if (!isLoaded) {\n    return <Segment loading className={styles.map} />;\n  }\n\n  if (loadError) {\n    return (\n      <Message negative>\n        <Message.Header>Problēma ielādējot karti</Message.Header>\n        <p>\n          Diemžēl, radusies problēma ielādējot karti. Pašlaik var izmantot tikai\n          ātro reģionu izvēlni (augstāk).\n        </p>\n      </Message>\n    );\n  }\n\n  return (\n    <GoogleMap\n      options={options}\n      mapContainerClassName={styles.map}\n      center={props.center}\n      zoom={props.zoom}\n    >\n      <Polygon\n        draggable\n        editable\n        path={polygonPath}\n        onLoad={setPolygonRef}\n        onDragEnd={onPolygonChange}\n        onMouseUp={onPolygonChange}\n        onRightClick={onPolygonRemove}\n      />\n    </GoogleMap>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  DropdownItemProps,\n  DropdownProps,\n  Form,\n  Select,\n} from \"semantic-ui-react\";\nimport RegionSelector from \"components/RegionSelector\";\nimport styles from \"./RegionField.module.css\";\nimport useRegionOptions from \"./use-region-options\";\n\nfunction getCenterCoords(arr: Array<[number, number]>) {\n  const coords = arr.reduce(\n    (x, y) => [x[0] + y[0] / arr.length, x[1] + y[1] / arr.length],\n    [0, 0],\n  );\n\n  return { lat: coords[1], lng: coords[0] };\n}\n\nfunction getCoordinatesByValue(\n  options: DropdownItemProps[] | undefined,\n  value: any,\n) {\n  return options!.find((opt) => opt.value === value)?.data?.geometry\n    ?.coordinates[0];\n}\n\nconst DEFAULT_ZOOM = 11;\nconst DEFAULT_CENTER = {\n  lat: 56.94,\n  lng: 24.105,\n};\n\ninterface RegionFieldProps {\n  value: string;\n  onChange: (value: any) => void;\n}\n\nexport default function RegionField(props: RegionFieldProps) {\n  const regionOptions = useRegionOptions();\n  const [initialValue] = useState(() => props.value);\n  const [center, setCenter] = useState(DEFAULT_CENTER);\n  const [zoom, setZoom] = useState(DEFAULT_ZOOM);\n\n  function onSelectChange(\n    e: React.SyntheticEvent<HTMLElement>,\n    { value, options }: DropdownProps,\n  ) {\n    if (!value) {\n      reset();\n      return;\n    }\n\n    setCenter(getCenterCoords(getCoordinatesByValue(options, value)));\n    setZoom(13);\n    props.onChange(value);\n  }\n\n  function reset() {\n    setZoom(DEFAULT_ZOOM);\n    setCenter(DEFAULT_CENTER);\n    props.onChange(initialValue);\n  }\n\n  return (\n    <>\n      <Form.Field required inline>\n        <label className={styles.label}>Reģions</label>\n        <div className={styles.dropdown}>\n          <Select\n            deburr\n            search\n            clearable\n            selectOnBlur={false}\n            selectOnNavigation={false}\n            loading={!regionOptions.length}\n            placeholder=\"Ātrā reģionu izvēlne\"\n            options={regionOptions}\n            onChange={onSelectChange}\n          />\n        </div>\n\n        <RegionSelector\n          center={center}\n          zoom={zoom}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </Form.Field>\n    </>\n  );\n}\n","import RegionField from \"./RegionField\";\n\nexport default RegionField;\n","import { useEffect, useState } from \"react\";\nimport { DropdownItemProps } from \"semantic-ui-react\";\n\n/**\n * Lazy-load the large region option JSON\n */\nexport default function useRegionOptions() {\n  const [options, setOptions] = useState<DropdownItemProps[]>([]);\n\n  useEffect(() => {\n    const loadRegionData = async () => {\n      const { riga } = await import(\"@brokalys/location-json-schemas\");\n\n      setOptions(\n        riga.features.map((data) => ({\n          data,\n          value: data.geometry.coordinates[0]\n            .map((coords) => `${coords[1]} ${coords[0]}`)\n            .join(\", \"),\n          text: data.properties.name,\n        })),\n      );\n    };\n\n    loadRegionData();\n  }, []);\n\n  return options;\n}\n","import { PRICE_TYPE } from \"./schema\";\n\ninterface PriceTypeLabelProps {\n  type: PRICE_TYPE;\n}\n\nexport default function PriceTypeLabel(props: PriceTypeLabelProps) {\n  if (props.type === \"SQM\") {\n    return (\n      <>\n        EUR/m<sup>2</sup>\n      </>\n    );\n  }\n\n  return <>EUR</>;\n}\n","import {\n  boolean,\n  mixed,\n  number,\n  object,\n  string,\n  NumberSchema,\n  SchemaOf,\n} from \"yup\";\n\nexport type PRICE_TYPE = \"TOTAL\" | \"SQM\";\n\nexport interface FormSchema {\n  email: string;\n  category: \"APARTMENT\" | \"HOUSE\" | \"LAND\";\n  type: \"SELL\" | \"RENT\";\n  price_min: number;\n  price_max: number;\n  price_type: PRICE_TYPE;\n  rooms_min?: number;\n  rooms_max?: number;\n  area_m2_min?: number;\n  area_m2_max?: number;\n  region: string;\n  privacy_policy: boolean;\n  frequency: \"IMMEDIA\" | \"DAILY\" | \"WEEKLY\" | \"MONTHLY\";\n  marketing?: boolean;\n}\n\nconst positiveFormNumber = (): NumberSchema =>\n  number()\n    .positive()\n    .integer()\n    .transform((value?: string | number, originalValue?: string | number) =>\n      String(originalValue).trim() === \"\" ? undefined : value,\n    );\n\nconst moreThanEqualMin = (min: number | undefined, schema: NumberSchema) => {\n  if (!min) {\n    return schema;\n  }\n  return schema.min(min);\n};\n\nconst schema: SchemaOf<FormSchema> = object().shape({\n  email: string().email().required(),\n  category: mixed().oneOf([\"APARTMENT\", \"HOUSE\", \"LAND\"]).required(),\n  type: mixed().oneOf([\"SELL\", \"RENT\"]).required(),\n  price_min: positiveFormNumber().required(),\n  price_max: positiveFormNumber()\n    .required()\n    .when(\"price_min\", moreThanEqualMin)\n    .lessThan(10000000),\n  price_type: mixed().oneOf([\"TOTAL\", \"SQM\"]).required(),\n  rooms_min: positiveFormNumber(),\n  rooms_max: positiveFormNumber()\n    .when(\"rooms_min\", moreThanEqualMin)\n    .lessThan(20),\n  area_m2_min: positiveFormNumber(),\n  area_m2_max: positiveFormNumber()\n    .when(\"area_m2_min\", moreThanEqualMin)\n    .when(\"category\", (category: string, schema: NumberSchema) =>\n      schema.lessThan(category === \"LAND\" ? 1000000 : 1000),\n    ),\n  region: string()\n    .required()\n    .matches(/^(-?[0-9]{1,3}\\.[0-9]+ -?[0-9]{1,3}\\.[0-9]+(, )?)+$/, {\n      message: \"Lūdzu izvēlies reģionu\",\n    }),\n  frequency: mixed()\n    .oneOf([\"IMMEDIATE\", \"DAILY\", \"WEEKLY\", \"MONTHLY\"])\n    .required(),\n  privacy_policy: boolean()\n    .required()\n    .oneOf(\n      [true],\n      \"Lai izveidotu jaunu PINGERi, ir jāpiekrīt lietošanas noteikumiem un privātuma politikai\",\n    ),\n  marketing: boolean(),\n});\n\nexport default schema;\n","import React, { useState } from \"react\";\nimport { Controller, FieldError, useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport {\n  DropdownItemProps,\n  DropdownProps,\n  Form,\n  Icon,\n  Label,\n  LabelProps,\n  SemanticShorthandItem,\n} from \"semantic-ui-react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport \"shared/l10n\";\nimport RegionField from \"./Fields/RegionField\";\nimport PriceTypeLabel from \"./PriceTypeLabel\";\nimport schema, { FormSchema, PRICE_TYPE } from \"./schema\";\n\nconst categoryOptions: DropdownItemProps[] = [\n  { value: \"APARTMENT\", text: \"Dzīvoklis\" },\n  { value: \"HOUSE\", text: \"Māja\" },\n  { value: \"LAND\", text: \"Zeme\" },\n];\n\nconst typeOptions: DropdownItemProps[] = [\n  { value: \"SELL\", text: \"Pārdod\" },\n  { value: \"RENT\", text: \"Īrē\" },\n];\n\nconst priceTypeOptions: DropdownItemProps[] = [\n  { value: \"TOTAL\", text: \"Kopējā cena\" },\n  { value: \"SQM\", text: \"Par kvadratūru\" },\n];\n\nconst frequencyOptions: DropdownItemProps[] = [\n  {\n    value: \"IMMEDIATE\",\n    text: \"Nekavējoties\",\n    description: \"(viens e-pasts par katru jauno sludinājumu)\",\n  },\n  {\n    value: \"DAILY\",\n    text: \"Reizi dienā\",\n    description: \"(viens e-pasts ar visiem dienas sludinājumiem)\",\n  },\n  {\n    value: \"WEEKLY\",\n    text: \"Reizi nedēļā\",\n    description: \"(viens e-pasts ar visiem nedēļas sludinājumiem)\",\n  },\n  {\n    value: \"MONTHLY\",\n    text: \"Reizi mēnesī\",\n    description: \"(viens e-pasts ar visiem mēneša sludinājumiem)\",\n  },\n];\n\nconst DEFAULT_PRICE_TYPE = \"TOTAL\";\n\nfunction getError(\n  field?: FieldError,\n  pointing?: string,\n): boolean | SemanticShorthandItem<LabelProps> {\n  if (field) {\n    return { content: field?.message, pointing: pointing || \"below\" };\n  }\n  return false;\n}\n\ninterface PingerFormProps {\n  onSubmit: (data: FormSchema) => void;\n  loading?: boolean;\n  error?: React.ReactNode;\n  warning?: React.ReactNode;\n  success?: React.ReactNode;\n}\n\nexport default function PingerForm(props: PingerFormProps) {\n  const { control, handleSubmit, errors } = useForm<FormSchema>({\n    resolver: yupResolver(schema),\n  });\n  const [priceType, setPriceType] = useState<PRICE_TYPE>(DEFAULT_PRICE_TYPE);\n\n  return (\n    <Form\n      loading={props.loading}\n      error={!!props.error}\n      warning={!!props.warning}\n      success={!!props.success}\n      onSubmit={handleSubmit(props.onSubmit)}\n    >\n      <Controller\n        name=\"email\"\n        control={control}\n        defaultValue=\"\"\n        render={(props) => (\n          <Form.Field\n            required\n            id=\"form-email-field\"\n            control={Form.Input}\n            label=\"E-pasta adrese\"\n            placeholder=\"john@doe.com\"\n            error={getError(errors.email)}\n            value={props.value}\n            onChange={props.onChange}\n          />\n        )}\n      />\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"category\"\n          control={control}\n          defaultValue=\"APARTMENT\"\n          render={(props) => (\n            <Form.Field\n              required\n              id=\"form-category-field\"\n              control={Form.Select}\n              label=\"Nekustamā īpašuma tips\"\n              options={categoryOptions}\n              error={getError(errors.category)}\n              value={props.value}\n              onChange={(\n                e: React.SyntheticEvent<HTMLElement>,\n                { value }: DropdownProps,\n              ) => props.onChange(value)}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"type\"\n          control={control}\n          defaultValue=\"SELL\"\n          render={(props) => (\n            <Form.Field\n              required\n              id=\"form-type-field\"\n              control={Form.Select}\n              label=\"Darījuma veids\"\n              options={typeOptions}\n              error={getError(errors.type)}\n              value={props.value}\n              onChange={(\n                e: React.SyntheticEvent<HTMLElement>,\n                { value }: DropdownProps,\n              ) => props.onChange(value)}\n            />\n          )}\n        />\n      </Form.Group>\n\n      <Form.Group widths=\"3\">\n        <Controller\n          name=\"price_type\"\n          control={control}\n          defaultValue={DEFAULT_PRICE_TYPE}\n          render={(props) => (\n            <Form.Field\n              required\n              id=\"form-price-type-field\"\n              control={Form.Select}\n              label=\"Cenas veids\"\n              options={priceTypeOptions}\n              error={getError(errors.price_type)}\n              value={props.value}\n              onChange={(\n                e: React.SyntheticEvent<HTMLElement>,\n                { value }: DropdownProps,\n              ) => {\n                setPriceType(value as PRICE_TYPE);\n                props.onChange(value);\n              }}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"price_min\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field required error={!!errors.price_min}>\n              <label htmlFor=\"form-price-min-field\">Cena (min)</label>\n              <Form.Input\n                id=\"form-price-min-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"0\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.price_min}>\n                  <PriceTypeLabel type={priceType} />\n                </Label>\n              </Form.Input>\n              {errors.price_min && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-price-min-field-error-message\"\n                >\n                  {errors.price_min.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n        <Controller\n          name=\"price_max\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field required error={!!errors.price_max}>\n              <label htmlFor=\"form-price-max-field\">Cena (max)</label>\n              <Form.Input\n                id=\"form-price-max-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"1000\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.price_max}>\n                  <PriceTypeLabel type={priceType} />\n                </Label>\n              </Form.Input>\n              {errors.price_max && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-price-max-field-error-message\"\n                >\n                  {errors.price_max.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n      </Form.Group>\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"rooms_min\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field\n              control={Form.Input}\n              type=\"number\"\n              id=\"form-rooms-min-field\"\n              label=\"Istabas (min)\"\n              placeholder=\"1\"\n              error={getError(errors.rooms_min)}\n              value={props.value}\n              onChange={props.onChange}\n            />\n          )}\n        />\n        <Controller\n          name=\"rooms_max\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field\n              control={Form.Input}\n              type=\"number\"\n              id=\"form-rooms-max-field\"\n              label=\"Istabas (max)\"\n              placeholder=\"3\"\n              error={getError(errors.rooms_max)}\n              value={props.value}\n              onChange={props.onChange}\n            />\n          )}\n        />\n      </Form.Group>\n\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"area_m2_min\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field error={!!errors.area_m2_min}>\n              <label htmlFor=\"form-area-m2-min-field\">Platība (min)</label>\n              <Form.Input\n                id=\"form-area-m2-min-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"30\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.area_m2_min}>\n                  m<sup>2</sup>\n                </Label>\n              </Form.Input>\n              {errors.area_m2_min && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-area-m2-min-field-error-message\"\n                >\n                  {errors.area_m2_min.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n        <Controller\n          name=\"area_m2_max\"\n          control={control}\n          defaultValue=\"\"\n          render={(props) => (\n            <Form.Field error={!!errors.area_m2_max}>\n              <label htmlFor=\"form-area-m2-max-field\">Platība (max)</label>\n              <Form.Input\n                id=\"form-area-m2-max-field\"\n                labelPosition=\"right\"\n                type=\"number\"\n                placeholder=\"70\"\n              >\n                <input value={props.value} onChange={props.onChange} />\n                <Label basic prompt={!!errors.area_m2_max}>\n                  m<sup>2</sup>\n                </Label>\n              </Form.Input>\n              {errors.area_m2_max && (\n                <Label\n                  prompt\n                  pointing=\"above\"\n                  id=\"form-area-m2-max-field-error-message\"\n                >\n                  {errors.area_m2_max.message}\n                </Label>\n              )}\n            </Form.Field>\n          )}\n        />\n      </Form.Group>\n\n      <Controller\n        name=\"frequency\"\n        control={control}\n        defaultValue=\"WEEKLY\"\n        render={(props) => (\n          <Form.Field\n            required\n            id=\"form-frequency-field\"\n            control={Form.Select}\n            label=\"Cik bieži vēlies saņemt PINGER e-pastus?\"\n            options={frequencyOptions}\n            error={getError(errors.frequency)}\n            value={props.value}\n            onChange={(\n              e: React.SyntheticEvent<HTMLElement>,\n              { value }: DropdownProps,\n            ) => props.onChange(value)}\n          />\n        )}\n      />\n\n      <Controller\n        name=\"region\"\n        control={control}\n        defaultValue=\"56.992294 24.136619, 56.976394 23.995790, 56.924904 24.005336, 56.889288 24.108467, 56.932211 24.291935, 56.996502 24.245176, 56.992294 24.136619\"\n        render={RegionField}\n      />\n\n      <Controller\n        name=\"privacy_policy\"\n        control={control}\n        defaultValue={false}\n        render={(props) => (\n          <Form.Checkbox\n            required\n            inline\n            id=\"form-privacy-policy-field\"\n            label={\n              <label>\n                Piekrītu{\" \"}\n                <Link to=\"/terms-and-conditions\" target=\"_blank\">\n                  lietošanas noteikumiem <Icon name=\"external\" />\n                </Link>{\" \"}\n                un{\" \"}\n                <Link to=\"/privacy-policy\" target=\"_blank\">\n                  privātuma politikai <Icon name=\"external\" />\n                </Link>\n              </label>\n            }\n            error={getError(errors.privacy_policy, \"left\")}\n            value=\"agree\"\n            checked={!!props.value}\n            onChange={() => props.onChange(!props.value)}\n          />\n        )}\n      />\n\n      <Controller\n        name=\"marketing\"\n        control={control}\n        defaultValue={false}\n        render={(props) => (\n          <Form.Checkbox\n            inline\n            id=\"form-marketing-field\"\n            label={\n              <label>\n                Vēlos saņemt mārketinga komunikāciju{\" \"}\n                <Label pointing=\"left\">\n                  uzzini pirmais par Brokalys uzlabojumiem!\n                </Label>\n              </label>\n            }\n            value=\"agree\"\n            checked={!!props.value}\n            onChange={() => props.onChange(!props.value)}\n          />\n        )}\n      />\n\n      {props.error}\n      {props.warning}\n      {props.success}\n\n      <Form.Field\n        control={Form.Button}\n        primary\n        type=\"submit\"\n        role=\"button\"\n        content=\"Saņemt nek.īp. paziņojumus\"\n        formNoValidate\n      />\n    </Form>\n  );\n}\n\nPingerForm.defaultProps = {\n  loading: false,\n  error: false,\n  success: false,\n};\n","import { ApolloError, useMutation } from \"@apollo/client\";\nimport { loader } from \"graphql.macro\";\nimport { useCallback } from \"react\";\nimport { Message } from \"semantic-ui-react\";\nimport Form, { FormSchema } from \"components/Form\";\n\nconst CREATE_PINGER = loader(\"../../graphql/create-pinger.graphql\");\n\nfunction getMaxPingerLimitFromError(error?: ApolloError): number {\n  return error?.graphQLErrors[0]?.extensions?.maxPingers || 0;\n}\n\nexport default function Home() {\n  const [createPinger, { loading, error, data }] = useMutation(CREATE_PINGER, {\n    errorPolicy: \"all\",\n  });\n\n  const onSubmit = useCallback(\n    (form: FormSchema) => {\n      createPinger({ variables: form });\n    },\n    [createPinger],\n  );\n\n  return (\n    <>\n      <h1>Brokalys pingeris</h1>\n      <p>\n        Aizpildi formu un saņem paziņojumus e-pastā par jauniem nekustamā\n        īpašuma sludinājumiem.\n      </p>\n      <hr />\n      <Form\n        onSubmit={onSubmit}\n        loading={loading}\n        error={\n          error &&\n          getMaxPingerLimitFromError(error) <= 0 && (\n            <Message\n              error\n              header=\"Kaut kas nogāja greizi\"\n              content=\"Centīsimies atrisināt problēmu tuvākajā laikā.\"\n            />\n          )\n        }\n        warning={\n          error &&\n          getMaxPingerLimitFromError(error) > 0 && (\n            <Message warning>\n              <Message.Header>PINGERis nav izveidots</Message.Header>\n              <Message.Content>\n                Diemžēl, vienai e-pasta adresei var pievienot tikai{\" \"}\n                {getMaxPingerLimitFromError(error)} NĪ paziņojumus\n              </Message.Content>\n            </Message>\n          )\n        }\n        success={\n          data && (\n            <Message\n              success\n              header=\"PINGERis veiksmīgi izveidots\"\n              content=\"Turpmāk saņemsi e-pastus par jauniem nekustamo īpašumu sludinājumiem, kas atbilst tevis izvēlētajiem kritērijiem.\"\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n","import Home from \"./Home\";\n\nexport default Home;\n","import PrivacyPolicy from \"./PrivacyPolicy\";\n\nexport default PrivacyPolicy;\n","import { Link } from \"react-router-dom\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport default function PrivacyPolicy() {\n  return (\n    <div>\n      <h1>Privātuma politika</h1>\n      <p>\n        Brokalys vietnes uzturētājs un pārzinis (fiziska persona – Matīss Jānis\n        Āboltiņš) aizsargā un rūpējas par šīs interneta vietnes apmeklētāju\n        privātumu un personas datu aizsardzību, apņemas ievērot Jūsu tiesības uz\n        personas datu tiesisku apstrādi un aizsardzību, kā arī ievērot Fizisko\n        personu datu aizsardzības likumu, EIROPAS PARLAMENTA UN PADOMES REGULU\n        (ES) 2016/679 (2016. gada 27. aprīlis) par fizisku personu aizsardzību\n        attiecībā uz personas datu apstrādi un šādu datu brīvu apriti un ar ko\n        atceļ Direktīvu 95/46/EK (Vispārīgā datu aizsardzības regula) un citus\n        normatīvos aktus, ja tādi ir piemērojami datu apstrādei.\n      </p>\n      <p>\n        Šī privātuma politika sniedz informāciju par to, kā vietnes uzturētājs\n        apstrādā Jūsu personas datus, kad Jūs saņemat Brokalys vietnes e-pasta\n        paziņojumus.\n      </p>\n      <p>\n        Izmantojot sniegtos interneta pakalpojumus Jūs piekrītat, ka jebkura\n        Jūsu sniegtā informācija tiek apstrādāta un uzglabāta atbilstoši šai\n        privātuma politikai.\n      </p>\n\n      <h2>Datu apstrādes mērķis</h2>\n      <p>\n        Datu apstrāde tiek veikta, lai nodrošinātu, ka Broklays klients saņem\n        savā norādītajā e-pasta adresē nekustamo īpašumu paziņojumus.\n      </p>\n\n      <h2>Identificējamās informācijas pielietošana</h2>\n      <p>Vietnes uzturētājs var izmantot Jūsu personas datus, lai:</p>\n      <ul>\n        <li>\n          Nodrošinātu Jums iespēju saņemt Brokalys interneta vietnes pieejamos\n          pakalpojumus; Nosūtītu Jums e-pasta ziņojumus par vietnes uzlabojumiem\n          vai lai informētu jūs par jaunumiem;\n        </li>\n        <li>Atbildētu uz Jūsu informācijas pieprasījumiem.</li>\n      </ul>\n\n      <h2>Saites uz trešo personu tīmekļa vietnēm un atsauces</h2>\n      <p>\n        Brokalys nekustamo īpašumu paziņojumu e-pasti var saturēt saites uz\n        trešo personu tīmekļa vietnēm, kam ir savas privātuma, kā arī datu\n        vākšana, izmantošanas un izpaušanas politikas. Lūdzu, pirms lietošanas\n        iepazīstieties ar to noteikumiem un privātuma politikām. Brokalys\n        vietnes uzturētājs neatbild par trešo personu tīmekļu vietņu privātuma\n        ievērošanas praksi, sniegto pakalpojumu pieejamību vai uzticamību, vai\n        par to satura precizitāti vai pilnīgumu.\n      </p>\n\n      <h2>Informācijas izpaušana</h2>\n      <p>\n        Jūsu informācija netiks izpausta trešajām pusēm, izņemot gadījumus, kad\n        vietnes uzturētājs būs saņēmis skaidri izteiktu Jūsu piekrišanu vai arī\n        informācijas izpaušana tiks pieprasīta saskaņā ar likumdošanas prasībām.\n      </p>\n\n      <h2>Informācijas labošana/ atjaunināšana</h2>\n      <p>\n        Ja Jūs vēlaties pārskatīt, labot, atjaunināt vai vēlaties aizliegt\n        pārvaldīt Jūsu iepriekš sniegto informāciju, sazinieties ar vietnes\n        pārvaldītāju elektroniski lietojot e-pasta adresi matiss@brokalys.com\n      </p>\n\n      <h2>Izmaiņas privātuma politikā</h2>\n      <p>\n        Šī privātuma politika var tikt mainīt bez iepriekšēja brīdinājuma.\n        Jaunākā privātuma politikas versija, kas ir publicētā vietnē\n        https://pinger.brokalys.com/privacy-policy, aizstāj visas iepriekšējās\n        privātuma politikas versijas.\n      </p>\n\n      <Link to=\"/\">\n        <Icon name=\"arrow left\" /> Atgriezties\n      </Link>\n    </div>\n  );\n}\n","import TermsAndConditions from \"./TermsAndConditions\";\n\nexport default TermsAndConditions;\n","import { Link } from \"react-router-dom\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport default function TermsAndConditions() {\n  return (\n    <>\n      <h1>Lietošanas noteikumi</h1>\n\n      <h2>1. Vispārēja informācija</h2>\n      <p>\n        1.1. Interneta vietne brokalys.com (turpmāk – Interneta vietne) ir\n        paredzēta nekustamo īpašumu paziņojumu izveidei un nekustamo īpašumu\n        datu apskatei.\n      </p>\n      <p>\n        1.2. Interneta vietni pārvalda privātpersona Matīss Jānis Āboltiņš,\n        kontaktinformācija matiss@brokalys.com\n      </p>\n      <p>\n        1.3. Pirms uzsākt Interneta vietnes lietošanu, Lietotājam jāiepazīstas\n        ar šiem noteikumiem un jāapliecina piekrišana noteikumiem, aizpildot\n        atbilstošu atzīmi. Ja Lietotājs nepiekrīt Interneta vietnes lietošanas\n        noteikumiem, Lietotājam nav tiesības lietot šo Interneta vietni.\n      </p>\n\n      <h2>2. Personas datu apstrāde</h2>\n      <p>\n        2.1. Lietotājs, piesakoties saņemt nekustamo īpašumu paziņojumus,\n        piekrīt šiem lietošanas noteikumiem. Pēc Lietotāja peteikšanās Interneta\n        vietnē automātiski tiek izveidots Lietotāja profils.\n      </p>\n      <p>\n        2.2. Lietotājs var atsacīties no nekustamo īpašumu paziņojumiem\n        klikšķinot uz atrakstīšanās pogas, kas tiek ievietota katrā nekustamo\n        īpašumu paziņojuma e-pastā.\n      </p>\n      <p>\n        2.3. Lai pieteiktos nekustamo īpašumu paziņojumiem Interneta vietnē,\n        nepieciešams ievadīt lietotāja personas datus. Apliecinot iepazīšanos ar\n        Interneta vietnes lietošanas noteikumiem un Interneta vietnes privātuma\n        politiku, Lietotājs apliecina, ka lūdz veikt Lietotāja personas datu\n        apstrādi, lai saņemtu nekustamo īpašumu paziņojumus e-pastā.\n      </p>\n      <p>\n        2.4. Lietotājs var piekrist, ka Interneta vietnes uzturētājs izmanto\n        Lietotāja profilā norādīto e-pasta adresi komerciālu paziņojumu\n        sūtīšanai par Interneta vietnes piedāvātajiem produktiem vai\n        pakalpojumiem.\n      </p>\n      <p>\n        2.5. Lietotāja datu dzēšana tiek veikta pēc Lietotāja pieprasījuma, ja\n        vien šīs informācijas uzglabāšanai nepastāv cits tiesiskais pamats.\n      </p>\n\n      <h2>3. Lietotāja pienākumi</h2>\n      <p>\n        3.1. Lietotājam ir pienākums, veicot reģistrāciju Interneta vietnē,\n        uzrādīt savus personas datus.\n      </p>\n      <p>\n        3.2. Lietotājam ir pienākums izmantot tikai drošus elektronisko sakaru\n        un datu pārraides līdzekļus un iekārtas, lai reģistrētos Interneta\n        portālā.\n      </p>\n      <p>\n        3.3. Pirms pieteikšanās nekustamo īpašumu paziņojumu saņemšanai\n        iepazīties ar Lietotāja vispārējiem noteikumiem un privātuma politiku.\n      </p>\n      <p>\n        3.4. Brokalys.com ir tiesības vienpusēji veikt izmaiņas Lietošanas\n        noteikumos un Privātuma politikā. Lietotāja pienākums ir patstāvīgi\n        sekot līdzi izmaiņām, regulāri pārskatot Lietošanas noteikumus un\n        Privātuma politiku.\n      </p>\n\n      <h2>4. Lietotāja tiesības</h2>\n      <p>\n        4.1. Lietotājam ir tiesības bezmaksas izmantot Interneta vietnes\n        pakalpojumus.\n      </p>\n      <p>4.2. Lietotājam ir tiesības pieprasīt savu ievadīto datu dzēšanu.</p>\n      <p>\n        4.3. Lietotājam ir tiesības pieprasīt, kad, kādām personām, kādā apjomā\n        un ar kādu pamatojumu nodoti viņa personas datu. Tiesības pieprasīt šādu\n        pakalpojumu bez maksas vienu reizi gadā. Lietotājam netiek sniegta\n        informācija par personas datu nodošanu iestādēm, kurām ir tiesības\n        apstrādāt datus bez datu subjekta piekrišanas.\n      </p>\n\n      <h2>5. Atbildības ierobežojums</h2>\n      <p>\n        5.1. Interneta vietne neatbild par nekustamo īpašumu paziņojumu e-pastu\n        saturu patiesumu un par lietotāju rīcību saistībā ar šo informāciju.\n      </p>\n      <p>\n        5.2. Interneta vietnes uzturētājs nav atbildīgs par bojājumiem vai\n        traucējumiem Interneta vietne darbībā, ja to cēlonis ir bojājumi,\n        darbības traucējumi Lietotāja iekārtās, Lietotāja e-pasta konfigurācija\n        vai noslogotība, neatbilstošu vai nelicencētu iekārtu vai programmatūras\n        lietošana, pārtraukums elektroenerģijas piegādē vai sakaru traucējumi\n        starp Lietotāja iekārtām un Interneta vietni.\n      </p>\n\n      <h2>6. Intelektuālā īpašuma tiesības</h2>\n      <p>\n        6.1. Visas autora mantiskās un nemantiskās tiesības pieder\n        privātpersonai Matīsam Jānim Āboltiņam. Kontaktinformācija\n        matiss@brokalys.com\n      </p>\n      <p>\n        6.2. Portāla lietotājiem aizliegts lietot portālu tam neparedzētam\n        nolūkam, tajā skaitā ievadīt ievadlaukos nepieprasītu informāciju.\n      </p>\n\n      <Link to=\"/\">\n        <Icon name=\"arrow left\" /> Atgriezties\n      </Link>\n    </>\n  );\n}\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ScrollToTop from \"react-router-scroll-top\";\nimport PageContainer from \"components/PageContainer\";\nimport Home from \"./Home\";\nimport PrivacyPolicy from \"./PrivacyPolicy\";\nimport TermsAndConditions from \"./TermsAndConditions\";\n\nexport default function Routes() {\n  return (\n    <Router>\n      <ScrollToTop>\n        <PageContainer>\n          <Switch>\n            <Route path=\"/terms-and-conditions\">\n              <TermsAndConditions />\n            </Route>\n            <Route path=\"/privacy-policy\">\n              <PrivacyPolicy />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </PageContainer>\n      </ScrollToTop>\n    </Router>\n  );\n}\n","import { ApolloProvider } from \"@apollo/client\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport client from \"shared/apollo-client\";\nimport ErrorBoundary from \"shared/bugsnag\";\nimport \"./index.css\";\nimport App from \"./pages\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}